# Workflow API version
apiVersion: io.orquestra.workflow/1.0.0

# Prefix for workflow ID
name: run-circuit-and-measure

imports:
- name: z-quantum-core
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/z-quantum-core.git"
    branch: "workflow-v1"
- name: qe-forest
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/qe-forest.git"
    branch: "workflow-v1"
- name: qe-qhipster
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/qe-qhipster.git"
    branch: "workflow-v1"
- name: qe-openfermion
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/qe-openfermion.git"
    branch: "workflow-v1"
- name: qe-qiskit
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/qe-qiskit.git"
    branch: "dev"

steps:
- name: get-initial-parameters
  config:
    runtime:
      type: python3
      imports: [z-quantum-core]
      parameters:
        file: z-quantum-core/tasks/circuit_tasks.py
        function: generate_random_ansatz_params
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - ansatz_specs: '{"module_name": "zquantum.core.interfaces.mock_objects", "function_name": "MockAnsatz", "number_of_layers": 4, "problem_size": 4}'
      type: string
    - min_value: 0.1
      type: float
    - max_value: 0.5
      type: float
    - seed: 9
      type: int
    - number_of_parameters: "None"
      type: string
  outputs:
    - name: params
      type: ansatz-params
- name: build-circuit
  passed: [get-initial-parameters]
  config:
    runtime:
      type: python3
      imports: [z-quantum-core]
      parameters:
        file: z-quantum-core/tasks/circuit_tasks.py
        function: build_ansatz_circuit
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - ansatz_specs: '{"module_name": "zquantum.core.interfaces.mock_objects", "function_name": "MockAnsatz", "number_of_layers": 4, "problem_size": 4}'
      type: string
    - params: ((get-initial-parameters.params))
      type: ansatz-params
  outputs:
    - name: circuit
      type: ansatz-circuit

- name: test-with-qeforest
  passed: [build-circuit]
  config:
    runtime:
      type: python3
      imports: [z-quantum-core, qe-forest]
      parameters:
        file: z-quantum-core/tasks/measure_tasks.py
        function: run_circuit_and_measure
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - backend_specs: '{"module_name": "qeforest.simulator", "function_name": "ForestSimulator", "device_name": "wavefunction-simulator", "n_samples": 10}'
      type: string
    - circuit: ((build-circuit.circuit))
      type: ansatz-circuit
    - noise_model: "None"
      type: string
    - device_connectivity: "None"
      type: string
  outputs:
    - name: measurements
      type: circuit-measurements
- name: test-with-qhipster
  passed: [build-circuit]
  config:
    runtime:
      type: python3
      imports: [z-quantum-core, qe-qhipster]
      parameters:
        file: z-quantum-core/tasks/measure_tasks.py
        function: run_circuit_and_measure
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - backend_specs: '{"module_name": "qeqhipster.simulator", "function_name": "QHipsterSimulator"}'
      type: string
    - circuit: ((build-circuit.circuit))
      type: ansatz-circuit
    - noise_model: "None"
      type: string
    - device_connectivity: "None"
      type: string
  outputs:
    - name: measurements
      type: circuit-measurements
- name: test-with-qeqiskit
  passed: [build-circuit]
  config:
    runtime:
      type: python3
      imports: [z-quantum-core, qe-openfermion, qe-qiskit]
      parameters:
        file: z-quantum-core/tasks/measure_tasks.py
        function: run_circuit_and_measure
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - backend_specs: '{"module_name": "qeqiskit.simulator", "function_name": "QiskitSimulator", "device_name": "qasm_simulator", "n_samples":10}'
      type: string
    - circuit: ((build-circuit.circuit))
      type: ansatz-circuit
    - noise_model: "None"
      type: string
    - device_connectivity: "None"
      type: string
  outputs:
    - name: measurements
      type: circuit-measurements

types:
  - circuit-measurements
  - ansatz-circuit
  - ansatz-params
